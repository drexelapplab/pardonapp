{
  "_from": "ng2-pdf-viewer",
  "_id": "ng2-pdf-viewer@5.1.1",
  "_inBundle": false,
  "_integrity": "sha512-FG3dAnrdKlJSx1qWIvoz/ir9gMONaks2HoGWifoxoGm98e2IfLJSpJl/NFBiSe/lBWa6H4WPkodnZ6fMwIl0FQ==",
  "_location": "/ng2-pdf-viewer",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "ng2-pdf-viewer",
    "fetchSpec": "latest",
    "name": "ng2-pdf-viewer",
    "raw": "ng2-pdf-viewer",
    "rawSpec": "",
    "registry": true,
    "saveSpec": null,
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/ng2-pdf-viewer/-/ng2-pdf-viewer-5.1.1.tgz",
  "_shasum": "3e6b8f0bf5a757f7a273c3b13445085615f5434a",
  "_shrinkwrap": null,
  "_spec": "ng2-pdf-viewer",
  "_where": "C:\\Users\\ryanwon7\\Desktop\\pardon-app",
  "author": {
    "email": "vadym.yatsyuk@gmail.com",
    "name": "Vadym Yatsyuk"
  },
  "bugs": {
    "url": "https://github.com/VadimDez/ng2-pdf-viewer/issues"
  },
  "bundleDependencies": false,
  "dependencies": {
    "@types/pdfjs-dist": "^0.1.2",
    "pdfjs-dist": "2.0.550"
  },
  "deprecated": false,
  "description": "Angular 5+ component for rendering PDF",
  "devDependencies": {
    "@angular/animations": "^5.2.0",
    "@angular/cdk": "^5.1.1",
    "@angular/cli": "1.6.6",
    "@angular/common": "^5.2.0",
    "@angular/compiler": "^5.2.0",
    "@angular/compiler-cli": "^5.2.0",
    "@angular/core": "^5.2.0",
    "@angular/forms": "^5.2.0",
    "@angular/http": "^5.2.0",
    "@angular/language-service": "^5.2.0",
    "@angular/material": "^5.1.1",
    "@angular/platform-browser": "^5.2.0",
    "@angular/platform-browser-dynamic": "^5.2.0",
    "@angular/router": "^5.2.0",
    "@types/jasmine": "~2.8.3",
    "@types/jasminewd2": "~2.0.2",
    "@types/node": "^6.0.96",
    "codelyzer": "^4.0.1",
    "core-js": "^2.4.1",
    "jasmine-core": "~2.8.0",
    "jasmine-spec-reporter": "~4.2.1",
    "karma": "~2.0.0",
    "karma-chrome-launcher": "~2.2.0",
    "karma-coverage-istanbul-reporter": "^1.2.1",
    "karma-jasmine": "~1.1.0",
    "karma-jasmine-html-reporter": "^0.2.2",
    "ng-packagr": "^1.6.0",
    "protractor": "~5.1.2",
    "rxjs": "^5.5.6",
    "ts-node": "~4.1.0",
    "tslint": "~5.9.1",
    "typescript": "~2.6.2",
    "zone.js": "^0.8.19"
  },
  "es2015": "ng2-pdf-viewer.js",
  "homepage": "https://github.com/VadimDez/ng2-pdf-viewer#readme",
  "keywords": [
    "angular",
    "pdf",
    "angular",
    "angular-pdf",
    "angular2-pdf",
    "ng2",
    "ng2-pdf",
    "angular5"
  ],
  "license": "MIT",
  "main": "bundles/ng2-pdf-viewer.umd.js",
  "metadata": "ng2-pdf-viewer.metadata.json",
  "module": "ng2-pdf-viewer.es5.js",
  "name": "ng2-pdf-viewer",
  "optionalDependencies": {},
  "peerDependencies": {
    "@angular/core": ">=5.0.0",
    "@types/pdfjs-dist": "^0.1.2",
    "pdfjs-dist": "2.0.550"
  },
  "private": false,
  "readme": "<h1 align=\"center\">Angular 5+ PDF Viewer</h1>\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/ng2-pdf-viewer\">\n    <img src=\"https://img.shields.io/npm/dm/ng2-pdf-viewer.svg?style=flat\" alt=\"downloads\">\n  </a>\n  <a href=\"https://badge.fury.io/js/ng2-pdf-viewer\">\n    <img src=\"https://badge.fury.io/js/ng2-pdf-viewer.svg\" alt=\"npm version\">\n  </a>\n  <a href=\"https://david-dm.org/vadimdez/ng2-pdf-viewer\" title=\"dependencies status\">\n    <img src=\"https://david-dm.org/vadimdez/ng2-pdf-viewer/status.svg\"/>\n  </a>\n  <a href=\"https://travis-ci.org/VadimDez/ng2-pdf-viewer\" title=\"test\">\n    <img src=\"https://travis-ci.org/VadimDez/ng2-pdf-viewer.svg?branch=master\"/>\n  </a>\n  <a href=\"https://gitter.im/ngx-pdf-viewer/Lobby\" title=\"Gitter\">\n    <img src=\"https://img.shields.io/gitter/room/nwjs/nw.js.svg\" alt=\"Gitter\"/>\n  </a>\n  <a href=\"https://www.paypal.me/vadimdez\" title=\"Donate to this project using Paypal\">\n    <img src=\"https://img.shields.io/badge/paypal-donate-yellow.svg\" alt=\"PayPal donate button\" />\n  </a>\n</p>\n\n> PDF Viewer Component for Angular 5+\n\n### Demo page\n\n[https://vadimdez.github.io/ng2-pdf-viewer/](https://vadimdez.github.io/ng2-pdf-viewer/)\n\n#### Plunker Example \n\n[https://plnkr.co/edit/OlGVuS6oo2aVanokdBCw?p=preview](https://plnkr.co/edit/OlGVuS6oo2aVanokdBCw?p=preview)\n\n### Blog post\n\n[https://medium.com/@vadimdez/render-pdf-in-angular-4-927e31da9c76](https://medium.com/@vadimdez/render-pdf-in-angular-4-927e31da9c76)\n\n## Overview\n\n* [Install](README.md#install)\n* [Usage](README.md#usage)\n* [Options](README.md#options)\n* [Render local PDF file](README.md#render-local-pdf-file)\n* [Set custom path to the worker](README.md#set-custom-path-to-the-worker)\n* [Search in the PDF](README.md#search-in-the-pdf)\n* [Contribute](README.md#contribute)\n\n## Install\n\n```\nnpm install ng2-pdf-viewer --save\n```\n\n*Note: For angular 4 or less use version `3.0.8`*\n\n## Usage\n\nIn case you're using ```systemjs``` see configuration [here](https://github.com/VadimDez/ng2-pdf-viewer/blob/master/SYSTEMJS.md).\n\nAdd ```PdfViewerModule``` to your module's ```imports```\n\n```typescript\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { AppComponent } from './app/app.component';\n\nimport { PdfViewerModule } from 'ng2-pdf-viewer';\n\n@NgModule({\n  imports: [BrowserModule, PdfViewerModule],\n  declarations: [AppComponent],\n  bootstrap: [AppComponent]\n})\n\nclass AppModule {}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n```\n\nAnd then use it in your component\n\n```typescript\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'example-app',\n  template: `\n  <div>\n      <label>PDF src</label>\n      <input type=\"text\" placeholder=\"PDF src\" [(ngModel)]=\"pdfSrc\">\n  </div>\n  <pdf-viewer [src]=\"pdfSrc\" \n              [render-text]=\"true\"\n              style=\"display: block;\"\n  ></pdf-viewer>\n  `\n})\nexport class AppComponent {\n  pdfSrc: string = '/pdf-test.pdf';\n}\n```\n\n## Options\n\n* [[src]](#src)\n* [[(page)]](#page)\n* [[stick-to-page]](#stick-to-page)\n* [[external-link-target]](#external-link-target)\n* [[render-text]](#render-text)\n* [[rotation]](#rotation)\n* [[zoom]](#zoom)\n* [[original-size]](#original-size)\n* [[fit-to-page]](#fit-to-page)\n* [[show-all]](#show-all)\n* [[autoresize]](#autoresize)\n* [[c-maps-url]](#c-maps-url)\n* [(after-load-complete)](#after-load-complete)\n* [(page-rendered)](#page-rendered)\n* [(error)](#error)\n* [(on-progress)](#on-progress)\n\n#### [src]\n\n| Property | Type | Required |\n| --- | ---- | --- |\n| [src] | *string, object, UInt8Array* | Required |\n\nPass pdf location\n \n```\n[src]=\"'https://vadimdez.github.io/ng2-pdf-viewer/pdf-test.pdf'\"\n```\n\nFor more control you can pass options object to ```[src]```.\n\nOptions object for loading protected PDF would be\n \n ```js\n {\n  url: 'https://vadimdez.github.io/ng2-pdf-viewer/pdf-test.pdf',\n  withCredentials: true\n }\n ```\n \n See more attributes [here](https://github.com/mozilla/pdf.js/blob/master/src/display/api.js#L107-L186).\n\n#### [page]\n\n\n| Property | Type | Required |\n| --- | ---- | --- |\n| [page] or [(page)] | *number* | *Required* with [show-all]=\"false\" or *Optional* with [show-all]=\"true\" |\n\nPage number\n\n```\n[page]=\"1\"\n```\nsupports two way data binding as well\n```\n[(page)]=\"pageVariable\"\n```\n\n#### [stick-to-page]\n\n| Property | Type | Required |\n| --- | ---- | --- |\n| [stick-to-page] | *boolean* | *Optional* |\n\nSticks view to the page. Works in combination with `[show-all]=\"true\"` and `page`.\n\n```\n[stick-to-page]=\"true\"\n```\n\n#### [render-text]\n\n| Property | Type | Required |\n| --- | ---- | --- |\n| [render-text] | *boolean* | *Optional* |\n\nEnable text rendering, allows to select text\n```\n[render-text]=\"true\"\n```\n\n#### [external-link-target]\n\n| Property | Type | Required |\n| --- | ---- | --- |\n| [external-link-target] | *string* | *Optional* |\n\nUsed in combination with `[render-text]=\"true\"`\n\nLink target\n* `blank`\n* `none`\n* `self`\n* `parent`\n* `top`\n```\n[external-link-target]=\"'blank'\"\n```\n\n#### [rotation]\n\n| Property | Type | Required |\n| --- | ---- | --- |\n| [rotation] | *number* | *Optional* |\n\nRotate PDF\n\n*Allowed step is 90 degree, ex. 0, 90, 180*\n```\n[rotation]=\"90\"\n```\n\n#### [zoom]\n\n| Property | Type | Required |\n| --- | ---- | --- |\n| [zoom] | *number* | *Optional* |\n\nZoom pdf\n```\n[zoom]=\"0.5\"\n```\n\n#### [original-size]\n\n| Property | Type | Required |\n| --- | ---- | --- |\n| [original-size] | *boolean* | *Optional* |\n\n* if set to *true* - size will be as same as original document\n* if set to *false* - size will be as same as container block\n\n```\n[original-size]=\"true\"\n```\n\n#### [fit-to-page]\n\n| Property | Type | Required |\n| --- | ---- | --- |\n| [fit-to-page] | *boolean* | *Optional* |\n\nWorks in combination with `[original-size]=\"true\"`. You can show your document in original size, and make sure that it's not bigger then container block.\n\n```\n[fit-to-page]=\"false\"\n```\n\n#### [show-all]\n\n| Property | Type | Required |\n| --- | ---- | --- |\n| [show-all] | *boolean* | *Optional* |\n\nShow single or all pages altogether\n\n```\n[show-all]=\"true\"\n```\n\n#### [autoresize]\n\n| Property | Type | Required |\n| --- | ---- | --- |\n| [autoresize] | *boolean* | *Optional* |\n\nTurn on or off auto resize.\n\n**!Important** To make `[autoresize]` work - make sure that `[original-size]=\"false\"` and `pdf-viewer` tag has `max-width` or `display` are set.\n\n```\n[autoresize]=\"true\"\n```\n\n#### [c-maps-url]\n\n| Property | Type | Required |\n| --- | ---- | --- |\n| [c-maps-url] | *string* | Optional |\n\nUrl for non-latin characters source maps.\n```\n[c-maps-url]=\"'assets/cmaps/'\"\n```\n\nDefault url is: [https://unpkg.com/pdfjs-dist@2.0.550/cmaps/](https://unpkg.com/pdfjs-dist@2.0.550/cmaps/)\n\nTo serve cmaps on your own you need to copy ```node_modules/pdfjs-dist/cmaps``` to ```assets/cmaps```.\n\n#### (after-load-complete)\n\n| Property | Type | Required |\n| --- | ---- | --- |\n| (after-load-complete) | *callback* | *Optional* |\n\nGet PDF information with callback\n\nFirst define callback function \"callBackFn\" in your controller,\n```typescript\ncallBackFn(pdf: PDFDocumentProxy) {\n   // do anything with \"pdf\"\n}\n```\n\nAnd then use it in your template:\n``` \n(after-load-complete)=\"callBackFn($event)\"\n```\n\n#### (page-rendered)\n\n| Property | Type | Required |\n| --- | ---- | --- |\n| (page-rendered) | *callback* | *Optional* |\n\nGet event when a page is rendered. Called for every page rendered.\n\nDefine callback in your component:\n\n```typescript\npageRendered(e: CustomEvent) {\n  console.log('(page-rendered)', e);\n}\n```\n\nAnd then bind it to `<pdf-viewer>`:\n\n```angular2html\n(page-rendered)=\"pageRendered($event)\n```\n\n#### (error)\n\n| Property | Type | Required |\n| --- | ---- | --- |\n| (error) | *callback* | *Optional* |\n\nError handling callback\n\nDefine callback in your component's class\n\n```typescript\nonError(error: any) {\n  // do anything\n}\n```\n\nThen add it to `pdf-component` in component's template\n\n```html\n(error)=\"onError($event)\"\n```\n\n#### (on-progress)\n\n| Property | Type | Required |\n| --- | ---- | --- |\n| (on-progress) | *callback* | *Optional* |\n\nLoading progress callback - provides progress information `total` and `loaded` bytes. Is called several times during pdf loading phase.\n\nDefine callback in your component's class\n\n```typescript\nonProgress(progressData: PDFProgressData) {\n  // do anything with progress data. For example progress indicator\n}\n```\n\nThen add it to `pdf-component` in component's template\n\n```html\n(on-progress)=\"onProgress($event)\"\n```\n\n## Render local PDF file\n\nIn your `html` template add `input`:\n\n```html\n<input (change)=\"onFileSelected()\" type=\"file\" id=\"file\">\n```\n\nand then add `onFileSelected` method to your component:\n\n```typescript\nonFileSelected() {\n  let $img: any = document.querySelector('#file');\n\n  if (typeof (FileReader) !== 'undefined') {\n    let reader = new FileReader();\n\n    reader.onload = (e: any) => {\n      this.pdfSrc = e.target.result;\n    };\n\n    reader.readAsArrayBuffer($img.files[0]);\n  }\n}\n```\n\n\n## Set custom path to the worker\n\nBy default the `worker` is loaded from `cdnjs.cloudflare.com`.\n\nIn your code update `path` to the worker to be for example `/pdf.worker.js` \n```typescript\n(<any>window).pdfWorkerSrc = '/pdf.worker.js';\n```\n*This should be set before `pdf-viewer` component is rendered.*\n\n\n## Search in the PDF\n\nUse `pdfFindController` for search functionality.\n\nIn your component's ts file:\n\n* Add reference to `pdf-viewer`,\n* then when needed execute search()\n\n```typescript\n@ViewChild(PdfViewerComponent) private pdfComponent: PdfViewerComponent;\n\nsearch(stringToSearch: string) {\n  this.pdfComponent.pdfFindController.executeCommand('find', {\n    caseSensitive: false, findPrevious: undefined, highlightAll: true, phraseSearch: true, query: stringToSearch\n  });\n}\n```\n\n## Contribute\n[See CONTRIBUTING.md](CONTRIBUTING.md)\n\n## License\n\n[MIT](https://tldrlegal.com/license/mit-license) © [Vadym Yatsyuk](https://github.com/vadimdez)\n\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://vadimdez@github.com/VadimDez/ng2-pdf-viewer.git"
  },
  "scripts": {
    "build": "ng build --prod",
    "docs": "ng build --prod --output-path docs --base-href ng2-pdf-viewer && cp ./docs/index.html ./docs/404.html",
    "e2e": "ng e2e",
    "lint": "ng lint",
    "ng": "ng",
    "packagr": "ng-packagr -p ng-package.json",
    "start": "ng serve",
    "test": "ng test --watch false",
    "test:w": "ng test"
  },
  "typings": "ng2-pdf-viewer.d.ts",
  "version": "5.1.1"
}
